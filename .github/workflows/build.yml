name: Build cross platform

permissions:
  contents: write

# Controls when the action will run. Triggers the workflow on push
on:
  push:
    tags:
      - 'v*' # Triggers on pushes of tags like v1.0, v20.15.10
  pull_request:

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            artifact: win32-x64,
          }
        - {
            name: "Ubuntu_Latest_GCC",
            os: ubuntu-latest,
            artifact: linux-x64,
          }
        - {
            name: "macOS Latest Clang",
            os: macos-14,
            artifact: darwin-arm64,
          }
        - {
            name: "macOS Intel?",
            os: macos-13,
            artifact: darwin-x64,
          }

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Use Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.3'

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
          echo github.ref: ${{ github.ref }}

      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install node cmake
          node --version
          cmake --version
          "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"

      - name: Add msbuild to PATH
        if: startsWith(matrix.config.os, 'windows')
        uses: microsoft/setup-msbuild@v2

      - name: Add setup Windows SDK
        if: startsWith(matrix.config.os, 'windows')
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v2
        with:
          s dk-version: 26100

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install cmake libxrandr-dev libxinerama-dev libxcursor-dev mesa-common-dev libx11-xcb-dev pkg-config nodejs npm
          cmake --version
          gcc --version

      - name: Install dependencies on macos
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install cmake
          cmake --version
          
      - name: Build
        shell: bash
        run: |
          npm ci
          echo "${{ github.event_name }}"
          npm run build

      - name: Upload Artifact ‚¨ÜÔ∏è
        uses: actions/upload-artifact@v4
        with:
          path: ./dist/*.dawn.node
          name: ${{ matrix.config.artifact }}.dawn.node
          overwrite: true

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*.dawn.node

  package:
    needs: build
    name: package-and-publish
    environment: deploy
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Print env
      run: |
        echo github.event.action: ${{ github.event.action }}
        echo github.event_name: ${{ github.event_name }}
        echo github.ref: ${{ github.ref }}
        echo github.ref_type: ${{ github.ref_type }}

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true

    - name: Build
      shell: bash
      run: |
        npm ci
        node build/prep-for-publish.js

    - name: Publish to NPM üìñ
      uses: JS-DevTools/npm-publish@v2
      with:
        token: ${{ secrets.NPM_TOKEN }}
